services:
  bitcoind:
    build:
      context: .
      dockerfile: Dockerfile.bitcoind
    volumes:
      - bitcoin_data:/data-${NETWORK:-signet}
    ports:
      - "${BTC_P2P_PORT:-38333}:${BTC_P2P_PORT:-38333}" # P2P port
      - "${BTC_RPC_PORT:-38332}:${BTC_RPC_PORT:-38332}" # RPC port
    environment:
      - NETWORK=${NETWORK:-signet}
    command: bitcoind -conf=/etc/bitcoin/bitcoin-${NETWORK:-signet}.conf -datadir=/data-${NETWORK:-signet}
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "nc", "-z", "0.0.0.0", "${BTC_P2P_PORT:-38333}" ]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - hydrapool_network

  cpuminer:
    build:
      context: .
      dockerfile: Dockerfile.cpuminer
    depends_on:
      bitcoind:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hydrapool_network

  ckpool-hydra-solo:
    build:
      context: .
      dockerfile: Dockerfile.ckpool-hydra-solo
    ports:
      - "3333:3333"
      - "8881:8881"
    depends_on:
      bitcoind:
        condition: service_healthy
    restart: unless-stopped
    command: /ckpool/src/ckpool --btcsolo --config=/ckpool-hydra-${NETWORK:-signet}.json --log-shares --loglevel=7
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "3333" ]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - hydrapool_network

  hydrapool:
    build:
      context: .
      dockerfile: Dockerfile.p2pool
    depends_on:
      - bitcoind
      - ckpool-hydra-solo
    environment:
      - P2POOL_BITCOIN_NETWORK=${NETWORK:-signet}
      - P2POOL_BITCOIN_URL=bitcoind:${BTC_RPC_PORT:-38332}
      - P2POOL_STORE_PATH=/data/${NETWORK:-signet}
      - P2POOL_CKPOOL_HOST=ckpool-hydra-solo
      - RUST_LOG=info
    command: /p2pool/target/release/p2poolv2 --config=/p2pool/config.toml
    volumes:
      - hydrapool_data:/data
    restart: unless-stopped
    networks:
      - hydrapool_network

volumes:
  bitcoin_data:
  hydrapool_data:


networks:
  hydrapool_network:
    driver: bridge
