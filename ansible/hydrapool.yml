---
- name: Deploy Hydra Pool Services
  hosts: hydrapool_servers
  become: true
  vars:
    network: "{{ hostvars['localhost']['network'] | default('signet') }}"
    btc_p2p_port: "{{ '38333' if network == 'signet' else '48333' if network == 'testnet' else '8333' }}"
    btc_rpc_port: "{{ '38332' if network == 'signet' else '48332' if network == 'testnet' else '8332' }}"
    btc_zmq_port: "{{ '38334' if network == 'signet' else '28334' if network == 'testnet' else '8334' }}"
    pool_api_port: "{{ '36884' if network == 'signet' else '26884' if network == 'testnet' else '6884' }}"
    data_dir: "/var/lib/hydrapool"
    log_dir: "/var/log/hydrapool"

  pre_tasks:
    # Minimal bootstrap to ensure Python is available
    - name: Check if Python is installed
      raw: command -v python3 || command -v python
      register: python_check
      changed_when: false
      failed_when: python_check.rc != 0
      
    # Use Ansible's package module which is OS-agnostic
    - name: Install Python and basic dependencies
      package:
        name:
          - "{{ python_pkg }}"
          - "{{ python_setuptools_pkg }}"
          - "{{ python_pip_pkg }}"
        state: present
      vars:
        python_pkg: "{{ 'python3' if ansible_os_family in ['Debian', 'RedHat', 'Suse'] else 'python' }}"
        python_setuptools_pkg: "{{ 'python3-setuptools' if ansible_os_family in ['Debian', 'RedHat', 'Suse'] else 'python-setuptools' }}"
        python_pip_pkg: "{{ 'python3-pip' if ansible_os_family in ['Debian', 'RedHat', 'Suse'] else 'python-pip' }}"
      
    # Install specific package manager modules based on OS
    - name: Install apt Python module (Debian)
      package:
        name: python3-apt
        state: present
      when: ansible_os_family == "Debian"
      
    - name: Install dnf Python module (RedHat)
      package:
        name: python3-dnf
        state: present
      when: ansible_os_family == "RedHat"
      
  tasks:
    # Use package module for cross-platform compatibility when possible
    - name: Install required common packages
      package:
        name:
          - ca-certificates
          - curl 
          - gnupg
        state: present
        update_cache: yes
        
    # OS-specific package installations
    - name: Install Debian-specific packages
      apt:
        name:
          - apt-transport-https
          - lsb-release
          - netcat-openbsd
          - python3-venv  # Ensure python3-venv is installed
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"
      
    - name: Install RedHat-specific packages
      dnf:
        name:
          - nc  # netcat
        state: present
        update_cache: yes
      when: ansible_os_family == "RedHat"
      
    - name: Install Arch-specific packages
      pacman:
        name:
          - openbsd-netcat
        state: present
        update_cache: yes
      when: ansible_os_family == "Archlinux"
      
    - name: Install SUSE-specific packages
      zypper:
        name:
          - netcat
        state: present
        update_cache: yes
      when: ansible_os_family == "Suse"

    # Docker installation using Ansible package module
    - name: Install Docker using package module
      package:
        name: docker-ce
        state: present
      
    - name: Create a Python virtual environment
      command: python3 -m venv /opt/hydrapool_venv --system-site-packages
      args:
        creates: /opt/hydrapool_venv

    - name: Ensure pip is installed in the virtual environment
      command: /opt/hydrapool_venv/bin/python -m ensurepip
      args:
        creates: /opt/hydrapool_venv/bin/pip

    - name: Install Docker Python module in virtual environment
      command: /opt/hydrapool_venv/bin/pip3 install docker

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Create data directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - "{{ data_dir }}/bitcoin-{{ network }}"
        - "{{ data_dir }}/hydrapool"
        - "{{ log_dir }}"

    - name: Create Docker network
      docker_network:
        name: hydrapool_network
        state: present

    # Copy Bitcoin configuration
    - name: Copy Bitcoin configuration file template
      template:
        src: bitcoin-{{ network }}.conf.j2
        dest: "{{ data_dir }}/bitcoin-{{ network }}/bitcoin-{{ network }}.conf"
        mode: '0644'

    # Copy Hydrapool configuration
    - name: Copy Hydrapool configuration file template
      template:
        src: hydrapool-config.toml.j2
        dest: "{{ data_dir }}/hydrapool-config.toml"
        mode: '0644'

    - name: Create hydrapool service file
      template:
        src: hydrapool.service.j2
        dest: /etc/systemd/system/hydrapool-p2pool.service
        mode: '0644'
      notify: Reload systemd

    - name: Enable and start hydrapool service
      systemd:
        name: hydrapool
        enabled: yes
        state: started
        daemon_reload: yes

  handlers:
    - name: Reload systemd
      systemd:
        daemon_reload: yes
